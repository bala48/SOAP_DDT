<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4f07ac0d-a7e7-4254-a4e3-689bade74fb8" activeEnvironment="Default" name="WoodDuck_PostalCode" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="261c07f2-ad1a-431d-ae41-39ca1f468f68" wadlVersion="http://wadl.dev.java.net/2009/02" name="Get_AllPostalCodes" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://nextapiqa.srv.gapac.com</con:endpoint></con:endpoints><con:resource name="Get_AllPostalCodes" path="/dev/sys/api/v${version}/PostalCode" id="c5f1d200-1521-4ced-98c0-04ba3d09f6d9"><con:settings/><con:parameters/><con:method name="Get_AllPostalCodes" id="e53dc69e-4917-458b-8e5f-be7c67301af7" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="86bfad0c-8975-423e-bfa8-756b34f7760c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${ProjectURL}</con:endpoint><con:request/><con:credentials><con:username>${UserName}</con:username><con:password>${Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="bd25d13c-6590-443f-97de-737f212cd9ff" wadlVersion="http://wadl.dev.java.net/2009/02" name="Get_SpecificPostalCode_ById" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://nextapiqa.srv.gapac.com</con:endpoint></con:endpoints><con:resource name="Get_SpecificPostalCode_ById" path="/dev/sys/api/v${version}/PostalCode/${#TestCase#postalCodeId}" id="eecd55c2-abf4-4673-a181-c6c4fa4d62a6"><con:settings/><con:parameters/><con:method name="Get_SpecificPostalCode_ById" id="631fee90-e589-4595-ba64-21b46875fa91" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://nextapiqa.srv.gapac.com/dev/sys/api/v1/PostalCode/1">ns:Response</con:element></con:representation><con:request name="Request 1" id="b306b754-7861-4491-a7de-ba4b55d7a556" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${ProjectURL}</con:endpoint><con:request/><con:credentials><con:username>${UserName}</con:username><con:password>${Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="85b57c38-ee6c-4aa8-ab8a-8fcce15c11ac" wadlVersion="http://wadl.dev.java.net/2009/02" name="Get_PostalCode_ByCity&amp;State" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://nextapiqa.srv.gapac.com</con:endpoint></con:endpoints><con:resource name="Get_PostalCode_ByCity&amp;State" path="/dev/sys/api/v${version}/PostalCode/Search/${#TestCase#CityCodeId}" id="5b7a4451-0a65-4fd0-a4f7-349c22d086ba"><con:settings/><con:parameters/><con:method name="Get_PostalCode_ByCity&amp;State" id="8070a31d-0c80-4c1f-8a94-73ebe58ea165" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="1bb3c44e-7ded-4cf8-a074-ae5429565d03" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${ProjectURL}</con:endpoint><con:request/><con:credentials><con:username>${UserName}</con:username><con:password>${Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="2765aac0-282e-4256-acf2-149c0e87c526" wadlVersion="http://wadl.dev.java.net/2009/02" name="TokenGeneration" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://nextapiqa.srv.gapac.com</con:endpoint></con:endpoints><con:resource name="TokenGeneration" path="/dev/sys/api/v${version}/Token" id="3e2fdb30-52ca-4ad4-87b3-5350804a29af"><con:settings/><con:parameters><con:parameter><con:name>username</con:name><con:value>ire=d</con:value><con:style>QUERY</con:style><con:default>ire=d</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>password</con:name><con:value>w</con:value><con:style>QUERY</con:style><con:default>w</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="TokenGeneration" id="74a1a829-cf2f-4c23-8fd8-98a5231249d1" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="79f45cd3-e4ed-4330-98ae-4348aa4b8818" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${ProjectURL}</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${Password}"/>
  <con:entry key="username" value="${UserName}"/>
</con:parameters><con:parameterOrder><con:entry>username</con:entry><con:entry>password</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="82affc6c-c7f8-45e9-b8d9-6be33bfe87d1" name="WoodDuck_PostalCode"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="a77d46c4-d7b1-4570-9b5c-93ce6bd93bc5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="WoodDuck_PostalCodeTest" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Setup" id="1d97e9da-a381-4b20-a344-75c3f726af52">
        <con:settings/>
        <con:config><script>/**
* TestCase Setup Step 
* 
* @author  Cigniti
*/

context.script.execute()</script></con:config>
      </con:testStep><con:testStep type="restrequest" name="TokenGeneration - Request 1" id="16e4dcdd-e336-4662-b1e2-22786bb8657a"><con:settings/><con:config service="TokenGeneration" resourcePath="/dev/sys/api/v${version}/Token" methodName="TokenGeneration" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="TokenGeneration - Request 1" id="79f45cd3-e4ed-4330-98ae-4348aa4b8818" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${ProjectURL}</con:endpoint><con:request/><con:originalUri>http://nextapiqa.srv.gapac.com/dev/sys/api/v1/Token</con:originalUri><con:assertion type="GroovyScriptAssertion" id="fecd6231-3671-46a5-85d7-e63dc02b594e" name="Status"><con:configuration><scriptText>def ExpectedHTTPResponse = 'HTTP/1.1 200 OK'
def headers = messageExchange.response.responseHeaders
def actualHTTPResponse = headers['#status#']
assert (actualHTTPResponse[0].contains(ExpectedHTTPResponse)), "Found Invalid URI in the response"
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="1b07ce2e-a276-4752-af83-5ce8db16a832" name="CaptureToken"><con:configuration><scriptText>import groovy.json.JsonSlurper

def response = context.expand('${#Response}')

def Token = response
assert Token != null
context.testCase.setPropertyValue("token", Token)


</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="password" value="${Password}"/>
  <con:entry key="username" value="${UserName}"/>
</con:parameters><con:parameterOrder><con:entry>username</con:entry><con:entry>password</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_AllPostalCodes - Request 1" id="7b38c102-fd83-4fb9-8db2-61ac0e9a240c"><con:settings/><con:config service="Get_AllPostalCodes" resourcePath="/dev/sys/api/v${version}/PostalCode" methodName="Get_AllPostalCodes" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_AllPostalCodes - Request 1" id="86bfad0c-8975-423e-bfa8-756b34f7760c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${ProjectURL}</con:endpoint><con:request/><con:originalUri>http://nextapiqa.srv.gapac.com/dev/sys/api/v1/PostalCode</con:originalUri><con:assertion type="GroovyScriptAssertion" id="77a72845-85b2-4580-b3f0-beb2f643c326" name="Script Assertion"><con:configuration><scriptText>def ExpectedHTTPResponse = 'HTTP/1.1 200 OK'
def headers = messageExchange.response.responseHeaders
def actualHTTPResponse = headers['#status#']
assert (actualHTTPResponse[0].contains(ExpectedHTTPResponse)), "Found Invalid URI in the response"
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8c078055-56ba-41f0-8ff2-93ba7143bf3c" name="Script Assertion_AllPostalCodes"><con:configuration><scriptText>import groovy.json.JsonSlurper

def response = context.expand('${#Response}')
def jsonResponse = new JsonSlurper().parseText(response)

def PostalCodesCount= jsonResponse.results.size()

assert PostalCodesCount>=1
</scriptText></con:configuration></con:assertion><con:credentials><con:username>${UserName}</con:username><con:password>${Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_SpecificPostalCode_ById - Request 1" id="63b1a86f-84dc-4a77-bcad-ded8e921bd72"><con:settings/><con:config service="Get_SpecificPostalCode_ById" resourcePath="/dev/sys/api/v${version}/PostalCode/${#TestCase#postalCodeId}" methodName="Get_SpecificPostalCode_ById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_SpecificPostalCode_ById - Request 1" id="b306b754-7861-4491-a7de-ba4b55d7a556" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${ProjectURL}</con:endpoint><con:request/><con:originalUri>http://nextapiqa.srv.gapac.com/dev/sys/api/v1/PostalCode/1</con:originalUri><con:assertion type="GroovyScriptAssertion" id="2d0ce267-d56f-4571-9b42-5c751b7909ba" name="Script Assertion"><con:configuration><scriptText>def ExpectedHTTPResponse = 'HTTP/1.1 200 OK'
def headers = messageExchange.response.responseHeaders
def actualHTTPResponse = headers['#status#']
assert (actualHTTPResponse[0].contains(ExpectedHTTPResponse)), "Found Invalid URI in the response"
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="517f8527-3ac5-4269-9fd6-413cc1d66a26" name="Script Assertion_PostalCode"><con:configuration><scriptText>import groovy.json.JsonSlurper

def response = context.expand('${#Response}')
def jsonResponse = new JsonSlurper().parseText(response)

def PostalCodeID = jsonResponse.postalCode
assert PostalCodeID != null

context.testCase.setPropertyValue("ActPostalCodeID", PostalCodeID.toString())

def ActualPostalCodeID = context.testCase.getPropertyValue("ActPostalCodeID")

def ExpectedPostalCodeID = context.expand('${#TestCase#PostalCodeId}')

assert ExpectedPostalCodeID.equals(ActualPostalCodeID)
////assert ExpectedemailId.equals(EmailID.toString())</scriptText></con:configuration></con:assertion><con:credentials><con:username>${UserName}</con:username><con:password>${Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get_PostalCode_ByCity&amp;State - Request 1" id="78a5e17b-7cd9-4ebf-9fd1-4b3a4881359c"><con:settings/><con:config service="Get_PostalCode_ByCity&amp;State" resourcePath="/dev/sys/api/v${version}/PostalCode/Search/${#TestCase#CityCodeId}" methodName="Get_PostalCode_ByCity&amp;State" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_PostalCode_ByCity&amp;State - Request 1" id="1bb3c44e-7ded-4cf8-a074-ae5429565d03" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${ProjectURL}</con:endpoint><con:request/><con:originalUri>http://nextapiqa.srv.gapac.com/dev/sys/api/v1/PostalCode/Search/PORTSMOUTH</con:originalUri><con:assertion type="GroovyScriptAssertion" id="30204713-b26d-4c06-9798-0a859f5de7ac" name="Script Assertion"><con:configuration><scriptText>def ExpectedHTTPResponse = 'HTTP/1.1 200 OK'
def headers = messageExchange.response.responseHeaders
def actualHTTPResponse = headers['#status#']
assert (actualHTTPResponse[0].contains(ExpectedHTTPResponse)), "Found Invalid URI in the response"
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="a6560ffe-3fb2-48b9-8f66-b4d7f63b789d" name="Script Assertion_CityAndStateCode"><con:configuration><scriptText>import groovy.json.JsonSlurper

def response = context.expand('${#Response}')
def jsonResponse = new JsonSlurper().parseText(response)

def CityID = jsonResponse.city[0]
assert CityID != null

context.testCase.setPropertyValue("ActCityID", CityID.toString())

def ActualCityID = context.testCase.getPropertyValue("ActCityID")

def ExpectedCityID = context.expand('${#TestCase#CityCodeId}')

assert ExpectedCityID.equals(ActualCityID)
////assert ExpectedemailId.equals(EmailID.toString())</scriptText></con:configuration></con:assertion><con:credentials><con:username>${UserName}</con:username><con:password>${Password}</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Teardown" id="e520e3a2-301f-4a8e-a105-3016fa6c65e8">
        <con:settings/>
        <con:config>
          <script>/**
* TestCase Teardown Step 
* 
* @author  Cigniti
*/

if(context.i == null){
	context.i = 1
}

context.script.report("Test Request","Your Custom Message Goes Here" + context.i)
context.i = context.i + 1

context.script.loop()</script>
        </con:config>
      </con:testStep><con:setupScript>import groovy.util.GroovyScriptEngine

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
context.projectPath = groovyUtils.projectPath
context.gse = new GroovyScriptEngine(context.projectPath + "/scripts/")
scritpLoader = context.gse.loadScriptByName("TestCaseScripts.groovy")
context.script = scritpLoader.newInstance(context)</con:setupScript><con:properties><con:property><con:name>token</con:name><con:value>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoiaXJlZGR5IiwibmJmIjoiMTU0MTE1Mjg3MSIsImV4cCI6IjE1NDEyMzkyNzEifQ.0O3ggHV9FNqnyfAykEyZAR3tdL-P7J4LADAJfI6kHIU</con:value></con:property><con:property><con:name>dataHolder</con:name><con:value/></con:property><con:property><con:name>loopCounter</con:name><con:value>1</con:value></con:property><con:property><con:name>TestScenario_ID</con:name><con:value>WoodDuck_PostalCodeTest</con:value></con:property><con:property><con:name>AlertId</con:name><con:value>1</con:value></con:property><con:property><con:name>Row_Index</con:name><con:value>1</con:value></con:property><con:property><con:name>HttpStatus</con:name><con:value>200</con:value></con:property><con:property><con:name>TestScenario_DetailedDescription</con:name><con:value>WoodDuck_PostalCode1</con:value></con:property><con:property><con:name>UserId</con:name><con:value>SAJONES</con:value></con:property><con:property><con:name>subject</con:name><con:value>System Alert_Testing1</con:value></con:property><con:property><con:name>RunRow</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>iterationDescription1</con:name><con:value>WoodDuck_PostalCode1</con:value></con:property><con:property><con:name>ActPostalCodeID</con:name><con:value>00210</con:value></con:property><con:property><con:name>PostalCodeId</con:name><con:value>00210</con:value></con:property><con:property><con:name>CityandStateCodeId</con:name><con:value>PORTSMOUTH</con:value></con:property><con:property><con:name>CityCodeId</con:name><con:value>PORTSMOUTH</con:value></con:property><con:property><con:name>ActCityID</con:name><con:value>PORTSMOUTH</con:value></con:property></con:properties></con:testCase><con:properties/><con:setupScript>import groovy.util.GroovyScriptEngine

/**
* TestSuite Setup 
* 
* @author  Cigniti
*/

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
context.projectPath = groovyUtils.projectPath
context.gse = new GroovyScriptEngine(context.projectPath + "/scripts/")</con:setupScript><con:tearDownScript>/**
* TestSuite Teardown 
* 
* @author  Cigniti
*/

def reportClass = com.cigniti.soap.ui.core.report.Reporter
scriptLoader = context.gse.loadScriptByName("TestSuiteTearDown.groovy")
script = scriptLoader.newInstance(context.projectPath,context,reportClass)
script.publishReports()

//Write script logs to a file - TestSuiteRunListener.afterRun

def logArea = com.eviware.soapui.SoapUI.logMonitor.getLogArea("script log")

//## Get TestSuite name ##//
//def TSName = testRunner.testCase.testSuite.name
def TSName = this.testDataHolder

//Get LogFile directory and Construct LogFile
//def FileName = TSName + "-Logs.txt"
def LogFilePath = context.expand('${#Project#TestReportPath}')
def FileName = TSName + "-Logs" + ((int)(Math.random()*10000)) + ".txt"
FileName = LogFilePath + FileName

def LogFile = new File(FileName)

log.info "Generating Script logs....\r\n" + FileName

LogFile.createNewFile()
LogFile.write("Generating Script logs....\r\n")

if(logArea !=null)
{
def model = logArea.model
	if(model.size > 0) {
		for(c in 0..(model.size-1))
		{
			LogFile.append(model.getElementAt(c).toString() + "\r\n")
		}
	}
}</con:tearDownScript></con:testSuite><con:properties><con:property><con:name>Alert</con:name><con:value>rO0ABXNyACNjb20uY2lnbml0aS5zb2FwLnVpLmNvcmUuRGF0YU1hcHBlcgAAAAAAAAABAgAESQAKZGVmYXVsdFJvd1sADGFyckNvbnRhaW5lcnQAFFtbTGphdmEvbGFuZy9TdHJpbmc7TAANZGF0YUNvbnRhaW5lcnQAD0xqYXZhL3V0aWwvTWFwO0wAB3Jvd0RhdGF0ABBMamF2YS91dGlsL0xpc3Q7eHAAAAAAdXIAFFtbTGphdmEubGFuZy5TdHJpbmc7Mk0JrYQy5FcCAAB4cAAAAAN1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAIdAAJUm93X0luZGV4dAAGUnVuUm93dAAPVGVzdFNjZW5hcmlvX0lEdAAgVGVzdFNjZW5hcmlvX0RldGFpbGVkRGVzY3JpcHRpb250AAZVc2VySWR0AAdBbGVydElkdAAKSHR0cFN0YXR1c3QAB3N1YmplY3R1cQB+AAcAAAAIdAABMXQABFRSVUV0AA1Xb29kRHVja19UZXN0dAATV29vZER1Y2tfQWxlcnRBbGVydHQAB1NBSk9ORVN0AAExdAADMjAwdAAVU3lzdGVtIEFsZXJ0X1Rlc3RpbmcxdXEAfgAHAAAACHQAATJ0AARUUlVFdAANV29vZER1Y2tfVGVzdHQAFVdvb2REdWNrX0FsZXJ0QWxlcnRfMHQABklyZWRkeXQAATF0AAMyMDB0ABZTeXN0ZW0gQWxlcnRfVGVzdGluZzEyc3IAEWphdmEudXRpbC5IYXNoTWFwBQfawcMWYNEDAAJGAApsb2FkRmFjdG9ySQAJdGhyZXNob2xkeHA/QAAAAAAADHcIAAAAEAAAAAhxAH4AC3NyABNqYXZhLnV0aWwuQXJyYXlMaXN0eIHSHZnHYZ0DAAFJAARzaXpleHAAAAACdwQAAAACcQB+ABRxAH4AHXhxAH4ADnNxAH4AJQAAAAJ3BAAAAAJxAH4AF3EAfgAgeHEAfgAJc3EAfgAlAAAAAncEAAAAAnEAfgAScQB+ABt4cQB+AA9zcQB+ACUAAAACdwQAAAACcQB+ABhxAH4AIXhxAH4ADHNxAH4AJQAAAAJ3BAAAAAJxAH4AFXEAfgAeeHEAfgANc3EAfgAlAAAAAncEAAAAAnEAfgAWcQB+AB94cQB+ABBzcQB+ACUAAAACdwQAAAACcQB+ABlxAH4AInhxAH4ACnNxAH4AJQAAAAJ3BAAAAAJxAH4AE3EAfgAceHhzcQB+ACUAAAADdwQAAAADcQB+AAhxAH4AEXEAfgAaeA==</con:value></con:property><con:property><con:name>TestReportPath</con:name><con:value>C:\SOAP_POC_Georgia_Pacific\WoodDuck\Wood Duck/log/WoodDuck/PostalCode/</con:value></con:property><con:property><con:name>WoodDuck_Alert</con:name><con:value>rO0ABXNyACNjb20uY2lnbml0aS5zb2FwLnVpLmNvcmUuRGF0YU1hcHBlcgAAAAAAAAABAgAESQAKZGVmYXVsdFJvd1sADGFyckNvbnRhaW5lcnQAFFtbTGphdmEvbGFuZy9TdHJpbmc7TAANZGF0YUNvbnRhaW5lcnQAD0xqYXZhL3V0aWwvTWFwO0wAB3Jvd0RhdGF0ABBMamF2YS91dGlsL0xpc3Q7eHAAAAAAdXIAFFtbTGphdmEubGFuZy5TdHJpbmc7Mk0JrYQy5FcCAAB4cAAAAAJ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAIdAAJUm93X0luZGV4dAAGUnVuUm93dAAPVGVzdFNjZW5hcmlvX0lEdAAgVGVzdFNjZW5hcmlvX0RldGFpbGVkRGVzY3JpcHRpb250AAZVc2VySWR0AAdBbGVydElkdAAKSHR0cFN0YXR1c3QAB3N1YmplY3R1cQB+AAcAAAAIdAABMXQABFRSVUV0ABdXb29kRHVja19Qb3N0YWxDb2RlVGVzdHQAFFdvb2REdWNrX1Bvc3RhbENvZGUxdAAHU0FKT05FU3QAATF0AAMyMDB0ABVTeXN0ZW0gQWxlcnRfVGVzdGluZzFzcgARamF2YS51dGlsLkhhc2hNYXAFB9rBwxZg0QMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAAAAAMdwgAAAAQAAAACHEAfgALc3IAE2phdmEudXRpbC5BcnJheUxpc3R4gdIdmcdhnQMAAUkABHNpemV4cAAAAAF3BAAAAAFxAH4AFHhxAH4ADnNxAH4AHAAAAAF3BAAAAAFxAH4AF3hxAH4ACXNxAH4AHAAAAAF3BAAAAAFxAH4AEnhxAH4AD3NxAH4AHAAAAAF3BAAAAAFxAH4AGHhxAH4ADHNxAH4AHAAAAAF3BAAAAAFxAH4AFXhxAH4ADXNxAH4AHAAAAAF3BAAAAAFxAH4AFnhxAH4AEHNxAH4AHAAAAAF3BAAAAAFxAH4AGXhxAH4ACnNxAH4AHAAAAAF3BAAAAAFxAH4AE3h4c3EAfgAcAAAAAncEAAAAAnEAfgAIcQB+ABF4</con:value></con:property><con:property><con:name>WoodDuck_PostalCode</con:name><con:value>rO0ABXNyACNjb20uY2lnbml0aS5zb2FwLnVpLmNvcmUuRGF0YU1hcHBlcgAAAAAAAAABAgAESQAKZGVmYXVsdFJvd1sADGFyckNvbnRhaW5lcnQAFFtbTGphdmEvbGFuZy9TdHJpbmc7TAANZGF0YUNvbnRhaW5lcnQAD0xqYXZhL3V0aWwvTWFwO0wAB3Jvd0RhdGF0ABBMamF2YS91dGlsL0xpc3Q7eHAAAAAAdXIAFFtbTGphdmEubGFuZy5TdHJpbmc7Mk0JrYQy5FcCAAB4cAAAAAJ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAJdAAJUm93X0luZGV4dAAGUnVuUm93dAAPVGVzdFNjZW5hcmlvX0lEdAAgVGVzdFNjZW5hcmlvX0RldGFpbGVkRGVzY3JpcHRpb250AAZVc2VySWR0AAdBbGVydElkdAAKSHR0cFN0YXR1c3QADHBvc3RhbENvZGVJZHQACkNpdHlDb2RlSWR1cQB+AAcAAAAJdAABMXQABFRSVUV0ABdXb29kRHVja19Qb3N0YWxDb2RlVGVzdHQAFFdvb2REdWNrX1Bvc3RhbENvZGUxdAAHU0FKT05FU3QAATF0AAMyMDB0AAUwMDIxMHQAClBPUlRTTU9VVEhzcgARamF2YS51dGlsLkhhc2hNYXAFB9rBwxZg0QMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAAAAAMdwgAAAAQAAAACXEAfgALc3IAE2phdmEudXRpbC5BcnJheUxpc3R4gdIdmcdhnQMAAUkABHNpemV4cAAAAAF3BAAAAAFxAH4AFXhxAH4ADnNxAH4AHgAAAAF3BAAAAAFxAH4AGHhxAH4ACXNxAH4AHgAAAAF3BAAAAAFxAH4AE3hxAH4AD3NxAH4AHgAAAAF3BAAAAAFxAH4AGXhxAH4ADHNxAH4AHgAAAAF3BAAAAAFxAH4AFnhxAH4ADXNxAH4AHgAAAAF3BAAAAAFxAH4AF3hxAH4AEHNxAH4AHgAAAAF3BAAAAAFxAH4AGnhxAH4AEXNxAH4AHgAAAAF3BAAAAAFxAH4AG3hxAH4ACnNxAH4AHgAAAAF3BAAAAAFxAH4AFHh4c3EAfgAeAAAAAncEAAAAAnEAfgAIcQB+ABJ4</con:value></con:property></con:properties><con:afterLoadScript>import com.cigniti.soap.ui.core.DataMapper;
import java.io.File;
/**
 * Project Setup
 *
 * @author  Cigniti
 */

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath

if(new File(projectPath+ "/log/WoodDuck/PostalCode").exists()){
log.info "log directory already exist..."
}else if(new File(projectPath+ "/log").exists()){
new File((projectPath+ "/log/WoodDuck/PostalCode")).mkdir();
log.info "log directory created..."
}else if(new File(projectPath).exists()){
new File((projectPath+ "/log")).mkdir();
new File((projectPath+ "/log/WoodDuck/PostalCode")).mkdir();
log.info "log directory created..."
}

project.setPropertyValue("TestReportPath", projectPath+ "/log/WoodDuck/PostalCode/")

def alert = new DataMapper().importData(projectPath+ "/TestData/WoodDuck/PostalCode.csv");

project.setPropertyValue("WoodDuck_PostalCode",alert.preserveState())

def testSuites=project.testSuiteList
for(testSuite in testSuites) {
testCases=testSuite.testCaseList
for(testCase in testCases) {
testCase.setPropertyValue("dataHolder","")
testCase.setPropertyValue("loopCounter","1")
}
}

</con:afterLoadScript><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>